---
import type { CollectionEntry } from "astro:content";
import type { HTMLTag, Polymorphic } from "astro/types";
import FormattedDate from "../FormattedDate.astro";
import { Image } from "astro:assets";

type Props<Tag extends HTMLTag> = Polymorphic<{ as: Tag }> & {
	project: CollectionEntry<"project">;
	withDesc?: boolean;
};

const { project, as: Tag = "div", withDesc = false } = Astro.props;
const postDate = project.data.updatedDate ?? project.data.publishDate;
---

{
	project.data.coverImage && (
		<a href={`/projects/${project.slug}/`}>
			<Image
				src={project.data.coverGif.src}
				alt={project.data.coverGif.alt}
				width={1024}
				height={1024 / 2}
				class="aspect-thumbnail mb-4 rounded-2xl object-cover shadow-xl"
				loading="eager"
				fetchpriority="high"
			/>
		</a>
	)
}
<FormattedDate date={postDate} class="min-w-[120px] text-gray-500" />
<Tag>
	<a href={`/projects/${project.slug}/`} class="cactus-link font-bold" rel="prefetch">
		{project.data.title}
	</a>
	{
		!!project.data.tags?.length && (
			<div class="mb-4 mt-2">
				<svg
					aria-hidden="true"
					focusable="false"
					xmlns="http://www.w3.org/2000/svg"
					class="me-1 inline-block h-6 w-6"
					viewBox="0 0 24 24"
					stroke-width="1.5"
					stroke="currentColor"
					fill="none"
					stroke-linecap="round"
					stroke-linejoin="round"
				>
					<path stroke="none" d="M0 0h24v24H0z" fill="none" />
					<path d="M7.859 6h-2.834a2.025 2.025 0 0 0 -2.025 2.025v2.834c0 .537 .213 1.052 .593 1.432l6.116 6.116a2.025 2.025 0 0 0 2.864 0l2.834 -2.834a2.025 2.025 0 0 0 0 -2.864l-6.117 -6.116a2.025 2.025 0 0 0 -1.431 -.593z" />
					<path d="M17.573 18.407l2.834 -2.834a2.025 2.025 0 0 0 0 -2.864l-7.117 -7.116" />
					<path d="M6 9h-.01" />
				</svg>
				{project.data.tags.map((tag: string, i: number) => (
					<>
						<a
							class="cactus-link inline-block font-bold before:content-['#']"
							href={`/projects/tags/${tag}/`}
							data-pagefind-filter="tag"
						>
							{tag}
						</a>
						{i < project.data.tags.length - 1 && ", "}
					</>
				))}
			</div>
		)
	}
</Tag>

{withDesc && <q class="line-clamp-3 block italic">{project.data.description}</q>}
